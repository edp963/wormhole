{
  "app.components.Navigator.zh.en": "中 文",
  "rider.app.table.list": "List",
  "rider.app.modal.cancel": "Cancel",
  "rider.app.modal.ok": "Ok",
  "rider.app.modal.submit": "Submit",
  "rider.app.modal.save": "Save",
  "rider.app.search.reset": "Reast",
  "rider.app.search.ok": "Ok",
  "rider.app.search.time": "Select Time",
  "rider.app.table.view.details": "View Details",
  "rider.app.table.start.action": "Start",
  "rider.app.table.renew.action": "Renew",
  "rider.app.table.copy.action": "Copy",
  "rider.app.table.stop.action": "Stop",
  "rider.app.table.create.action": "Create",
  "rider.app.table.modify.action": "Modify",
  "rider.app.table.delete.action": "Delete",
  "rider.app.table.details": "Details",
  "rider.app.table.sure.delete": "Confirm to delete?",
  "rider.app.table.sure.stop": "Confirm to stop?",
  "rider.app.table.sure.start": "Confirm to start?",
  "rider.app.table.sure.renew": "Confirm to renew?",
  "rider.app.table.exists": "Exists",
  "rider.app.help": "Help",

  "rider.components.Navigator.edit.password": "Change Password",
  "rider.components.Navigator.new.password": "New Password",
  "rider.components.Navigator.sure.new.password": "Re-enter New Password",
  "rider.components.Navigator.old.password": "Old Password",
  "rider.containers.Project.add.project": "Create New Project",
  "rider.containers.Project.add.authorize.project": "Create & Authorize",
  "rider.containers.Project.edit.project": "Modify & Authorize",
  "rider.containers.Project.hide.project": "Hide",
  "rider.containers.Project.show.project": "Show",
  "rider.containers.Project.project.information": "Project Information",
  "rider.containers.Project.project.identification": "Project Name",
  "rider.containers.Project.project.identification.placeholder": "Capital/lowercase letters, Hyphen, Underscore or Figure",
  "rider.containers.Project.project.description": "Project Description",
  "rider.containers.Project.project.description.placeholder": "Description of project details",
  "rider.containers.Project.project.resource": "Project Resource",
  "rider.containers.Project.project.cpu": "Upper Limit of CPU",
  "rider.containers.Project.project.vcores": "Number of VCores",
  "rider.containers.Project.project.memory": "Upper Limit of Memory",
  "rider.containers.Project.project.ns.authority": "Namespace Authority",
  "rider.containers.Project.project.paging": "Paging",
  "rider.containers.Project.project.all": "All",
  "rider.containers.Project.project.user.authority": "User Authority",
  "rider.containers.Project.project.udf.authority": "UDF 权限",
  "rider.containers.Project.project.name.warning1": "Project name cannot be empty",
  "rider.containers.Project.project.name.warning2": "Letters, Figures, Hyphen or Underscore",
  "rider.containers.Project.cpu.warning": "Upper Limit of CPU cannot be empty",
  "rider.containers.Project.memory.warning": "Upper Limit of Memory cannot be empty",
  "rider.containers.Project.number.warning": "Should be number",

  "rider.containers.Flow.step.back": "Back",
  "rider.containers.Flow.step.next": "Next",
  "rider.containers.Flow.batch.action": "Batch Operation",

  "rider.containers.Stream.view.btn": "View",
  "rider.containers.Stream.reset.btn": "Reset",
  "rider.containers.Stream.modal.rate": "items/second",
  "rider.containers.Stream.modal.apply": "Apply",
  "rider.containers.Stream.modal.apply.all": "Apply All",

  "rider.containers.Namespace.Modal.tables.table2": "Please fill in the Table",
  "rider.containers.Namespace.Modal.tables.table3": "Duplication of Table name",
  "rider.containers.Namespace.Modal.tables.add": "Add",
  "rider.containers.Namespace.Modal.tables.table4": "Please select other items first",
  "rider.containers.Namespace.Modal.tables.table5": "Both Type and Key should be filled in",
  "rider.containers.Namespace.Modal.tables.kafka.msg": "When you select Kafka, Table is the fourth layer in ums schema.namespace. For example, if ums schema.namespace is kafka.test.test1.test2.*.*.*, table will be test2.",
  "rider.containers.Namespace.Modal.url.kafka.msg": "localhost:9092,localhost1:9092",
  "rider.containers.Namespace.Modal.url.oracle.msg": "ip:port",
  "rider.containers.Namespace.Modal.url.es.msg": "if it acts as sink, fill in http://localhost:9200; if it acts as lookup, fill in localhost:9300",
  "rider.containers.Namespace.Modal.url.hbase.msg": "zookeeper url list, localhost:2181/hbase,localhost1:2181/hbase",
  "rider.containers.Namespace.Modal.url.other.msg": "Please select Data System",
  "rider.containers.Namespace.Modal.create": "Create Namespace",
  "rider.containers.Namespace.Modal.modify": "Modify Namespace",
  "rider.containers.Namespace.Modal.modify.success.msg": "Namespace is modified successfully!",
  "rider.containers.Namespace.Modal.create.success.msg": "Namespace is created successfully!",
  "rider.containers.Namespace.Modal.configure.success.msg": "Source Schema is configured successfully!",
  "rider.containers.Namespace.Modal.configure.tuple.error.msg": "Tuple type configuration has error!",
  "rider.containers.Namespace.Modal.configure.umsop.error.msg": "ums_op_ configuration has error!",
  "rider.containers.Namespace.Modal.configure.json.sample.notnull.msg": "JSON Sample is not null!",
  "rider.containers.Namespace.Modal.configure.json.sample.null.msg": "JSON Sample is null!",
  "rider.containers.Namespace.Modal.configure.json.sample.format": "Format!",
  "rider.containers.Namespace.Modal.configure.json.sample.clear": "Clear",
  "rider.containers.Namespace.Modal.configure.rename.repeat.msg": "Please modify duplicated items of Rename column!",
  "rider.containers.Namespace.Modal.configure.type.repeat.msg": "Only one array type contained!",
  "rider.containers.Namespace.Modal.configure.separator.msg": "Please fill in separator!",
  "rider.containers.Namespace.Modal.configure.length.msg": "Please fill in length!",
  "rider.containers.Namespace.Modal.configure.length.number.msg": "Length should be figures!",
  "rider.containers.Namespace.Modal.configure.umsts1.msg": "ums_ts_ type constraints: long, datetime, longarray, datetimearray.",
  "rider.containers.Namespace.Modal.configure.umsts2.msg": "If ums_ts_ type is datatime or datatimearray, data format should be yyyy/MM/dd HH:mm:ss[.SSS000/SSS], yyyy-MM-dd HH:mm:ss[.SSS000/SSS] or yyyyMMddHHmmss[SSS000/SSS].",
  "rider.containers.Namespace.Modal.configure.umsid1.msg": "ums_id_ type constraints: int, long, intarray, longarray.",
  "rider.containers.Namespace.Modal.configure.umsid2.msg": "It is not necessary to configure ums_id_ if there is only insert operation while writing data into sink; if there are insert, delete and update operations, ums_id_ must be configured.",
  "rider.containers.Namespace.Modal.configure.umsop1.msg": "ums_id_ type constraints: int, long, intarray, longarray.",
  "rider.containers.Namespace.Modal.configure.umsop2.msg": "Configure corresponding value of insert, update and delete.",
  "rider.containers.Namespace.Modal.configure.umsop3.msg": "It is not necessary to configure ums_op_ if there is only insert operation while writing data into sink; if there are insert, delete and update operations, ums_op_ must be configured.",
  "rider.containers.Namespace.Modal.configure.table.title.msg": "Note: Only one array type could be contained (intarray,etc. or jsonarray), which subfield should be set as one of the business keys.",
  "rider.containers.Namespace.Modal.configure.fieldType1.msg": "Example of **array: if classid field is intarray, data format should be {\"classid\":[1,4,7,9]};",
  "rider.containers.Namespace.Modal.configure.fieldType2.msg": "Example of jsonobject: if address field is jsonobject, data format should be {\"province\": \"北京\", \"city\": \"北京\", \"area\": \"朝阳区\"};",
  "rider.containers.Namespace.Modal.configure.fieldType3.msg": "Example of jsonarray: if contracts field is jsonarray, data format should be \"contracts\": [{\"name\": \"Jack\", \"phone\": \"18012345423\"}, {\"name\": \"Tom\", \"phone\": \"18012346423\"}];",
  "rider.containers.Namespace.Modal.configure.fieldType4.msg": "Example for tuple: if message field is tuple type, its data format should be: {\"message\": \"2017-06-27 14:14:04,557|INFO\"}, in which special characters exist among data as separators and separated character string needs processing respectively.",
  "rider.containers.Namespace.Modal.configure.btn": "Pushback",

  "rider.containers.Instance.Modal.create": "Create Instance",
  "rider.containers.Instance.Modal.modify": "Modify Instance",

  "rider.containers.Database.table.column.ds": "Data System",
  "rider.containers.Database.modal.create.db": "Create Database",
  "rider.containers.Database.modal.modify.db": "Modify Database",
  "rider.containers.Database.help.oracle": "Form: multiple lines of key=value or one line of key=value&key=value. When you select Oracle, \"service_name\" should be contained in Config.",
  "rider.containers.Database.help.others": "Form: multiple lines of key=value or one line of key=value&key=value",

  "rider.containers.User.table.modify.user.information": "Modify User Information",
  "rider.containers.User.table.user.user": "Create User",
  "rider.containers.User.table.user.password": "Password",
  "rider.containers.User.table.user.sure.password": "Re-enter Password",
  "rider.containers.User.table.user.name": "Name",
  "rider.containers.User.table.user.roletype": "RoleType",

  "rider.containers.Udf.modal.title.add": "Create UDF",
  "rider.containers.Udf.modal.title.edit": "Modify UDF",
  "rider.containers.Udf.modal.title.copy": "Delete UDF",

  "rider.containers.Workbench.config.btn": "Click to modify",
  "rider.containers.Workbench.transformation.add": "Add",
  "rider.containers.Workbench.transformation.up": "Up",
  "rider.containers.Workbench.transformation.down": "Down",
  "rider.containers.Workbench.transformation.lookup.msg": "if lookup table is user, source namespace is kafka.test.test.test, SQL sentence for example: select id as id1, name as name1 from user where (id,name) in (kafka.test.test.test.id, kafka.test.test.test.name);",
  "rider.containers.Workbench.transformation.spark.msg": "Table in SQL sentence is the fourth layer in source namespace; for example, if source namespace is kafka.test.test1.test2.*.*.*,  SQL sentence should be select * from test2;",
  "rider.containers.Workbench.transformation.resource.configuration": "Dirver/Executor resource configuration",
  "rider.containers.Workbench.tranformation.cep.output": "字段定义方式：字段名称:聚合函数。多个字段定义之间用逗号分隔。例如: age:max,salary:avg"
}
